-- // ElixirLibTest.lua
-- Visual idêntico ao MentaLib (tema Dark)
-- Compatível com: loadstring(game:HttpGet("https://raw.githubusercontent.com/Aspherian-EC/ui-teste-/refs/heads/main/ElixirLibTest"))()

local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local CoreGui = game:GetService("CoreGui")

local ElixirLib = {}

function ElixirLib:MakeWindow(cfg)
    cfg = cfg or {}
    local title = cfg.Name or "Elixir Client"

    local Gui = Instance.new("ScreenGui")
    Gui.Name = "ElixirClientUI"
    Gui.ZIndexBehavior = Enum.ZIndexBehavior.Global
    Gui.Parent = CoreGui

    local Main = Instance.new("Frame")
    Main.Size = UDim2.new(0, 550, 0, 400)
    Main.Position = UDim2.new(0.3, 0, 0.3, 0)
    Main.BackgroundColor3 = Color3.fromRGB(20, 20, 25)
    Main.BorderSizePixel = 0
    Main.Parent = Gui

    Instance.new("UICorner", Main).CornerRadius = UDim.new(0, 4)

    local Topbar = Instance.new("Frame")
    Topbar.Size = UDim2.new(1, 0, 0, 34)
    Topbar.BackgroundColor3 = Color3.fromRGB(30, 30, 35)
    Topbar.BorderSizePixel = 0
    Topbar.Parent = Main

    local Title = Instance.new("TextLabel")
    Title.Text = title
    Title.Font = Enum.Font.GothamBold
    Title.TextSize = 14
    Title.TextColor3 = Color3.fromRGB(240, 240, 240)
    Title.BackgroundTransparency = 1
    Title.Position = UDim2.new(0, 10, 0, 0)
    Title.Size = UDim2.new(0, 300, 1, 0)
    Title.TextXAlignment = Enum.TextXAlignment.Left
    Title.Parent = Topbar

    -- Drag
    local dragging, dragStart, startPos
    Topbar.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = input.Position
            startPos = Main.Position
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)
    UserInputService.InputChanged:Connect(function(input)
        if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
            local delta = input.Position - dragStart
            Main.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
        end
    end)

    local TabList = Instance.new("ScrollingFrame")
    TabList.Size = UDim2.new(0, 150, 1, -34)
    TabList.Position = UDim2.new(0, 0, 0, 34)
    TabList.BackgroundColor3 = Color3.fromRGB(25, 25, 30)
    TabList.BorderSizePixel = 0
    TabList.ScrollBarThickness = 4
    TabList.Parent = Main

    local TabListLayout = Instance.new("UIListLayout", TabList)
    TabListLayout.SortOrder = Enum.SortOrder.LayoutOrder
    TabListLayout.Padding = UDim.new(0, 5)

    local RightPanel = Instance.new("Frame")
    RightPanel.Size = UDim2.new(1, -150, 1, -34)
    RightPanel.Position = UDim2.new(0, 150, 0, 34)
    RightPanel.BackgroundColor3 = Color3.fromRGB(30, 30, 35)
    RightPanel.BorderSizePixel = 0
    RightPanel.Visible = false
    RightPanel.Parent = Main

    local Tabs = {}

    function Tabs:MakeTab(info)
        info = info or {}
        local tabName = info.Name or "Tab"

        local TabButton = Instance.new("TextButton")
        TabButton.Text = tabName
        TabButton.Font = Enum.Font.GothamBold
        TabButton.TextSize = 13
        TabButton.TextColor3 = Color3.fromRGB(230, 230, 230)
        TabButton.BackgroundColor3 = Color3.fromRGB(35, 35, 40)
        TabButton.Size = UDim2.new(1, -10, 0, 28)
        TabButton.Parent = TabList

        Instance.new("UICorner", TabButton).CornerRadius = UDim.new(0, 3)

        local padding = Instance.new("UIPadding", TabButton)
        padding.PaddingLeft = UDim.new(0, 20)

        local TabFrame = Instance.new("ScrollingFrame")
        TabFrame.Size = UDim2.new(1, -10, 1, -10)
        TabFrame.Position = UDim2.new(0, 5, 0, 5)
        TabFrame.BackgroundTransparency = 1
        TabFrame.ScrollBarThickness = 6
        TabFrame.Visible = false
        TabFrame.Parent = RightPanel

        local Layout = Instance.new("UIListLayout", TabFrame)
        Layout.Padding = UDim.new(0, 6)
        Layout.SortOrder = Enum.SortOrder.LayoutOrder

        TabButton.MouseButton1Click:Connect(function()
            for _, child in ipairs(RightPanel:GetChildren()) do
                if child:IsA("ScrollingFrame") then
                    child.Visible = false
                end
            end
            RightPanel.Visible = true
            TabFrame.Visible = true

            for _, btn in ipairs(TabList:GetChildren()) do
                if btn:IsA("TextButton") then
                    btn.BackgroundColor3 = Color3.fromRGB(35, 35, 40)
                end
            end
            TweenService:Create(TabButton, TweenInfo.new(0.15), {BackgroundColor3 = Color3.fromRGB(70, 70, 75)}):Play()
        end)

        -- Função de adicionar toggles dentro da tab
        function TabFrame:AddToggle(data)
            data = data or {}
            local name = data.Name or "Toggle"
            local default = data.Default or false
            local callback = data.Callback or function() end

            local ToggleFrame = Instance.new("Frame")
            ToggleFrame.Size = UDim2.new(1, -10, 0, 30)
            ToggleFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 40)
            ToggleFrame.BorderSizePixel = 0
            ToggleFrame.Parent = TabFrame

            Instance.new("UICorner", ToggleFrame).CornerRadius = UDim.new(0, 3)

            local Label = Instance.new("TextLabel")
            Label.Text = name
            Label.Font = Enum.Font.GothamBold
            Label.TextSize = 13
            Label.TextColor3 = Color3.fromRGB(237, 237, 237)
            Label.BackgroundTransparency = 1
            Label.Position = UDim2.new(0, 10, 0, 0)
            Label.Size = UDim2.new(1, -60, 1, 0)
            Label.TextXAlignment = Enum.TextXAlignment.Left
            Label.Parent = ToggleFrame

            local ToggleOuter = Instance.new("Frame")
            ToggleOuter.AnchorPoint = Vector2.new(1, 0.5)
            ToggleOuter.Position = UDim2.new(1, -15, 0.5, 0)
            ToggleOuter.Size = UDim2.new(0, 32, 0, 16)
            ToggleOuter.BackgroundColor3 = Color3.fromRGB(35, 35, 40)
            ToggleOuter.BorderSizePixel = 0
            ToggleOuter.Parent = ToggleFrame

            Instance.new("UICorner", ToggleOuter).CornerRadius = UDim.new(1, 0)

            local UIStroke = Instance.new("UIStroke")
            UIStroke.Color = Color3.fromRGB(54, 54, 62)
            UIStroke.Thickness = 1
            UIStroke.Parent = ToggleOuter

            local ToggleInner = Instance.new("Frame")
            ToggleInner.Size = UDim2.new(0, 14, 0, 14)
            ToggleInner.Position = UDim2.new(0, 1, 0.5, -7)
            ToggleInner.BackgroundColor3 = Color3.fromRGB(66, 66, 76)
            ToggleInner.BorderSizePixel = 0
            ToggleInner.Parent = ToggleOuter

            Instance.new("UICorner", ToggleInner).CornerRadius = UDim.new(1, 0)

            local state = default
            local function updateVisual()
                if state then
                    TweenService:Create(ToggleOuter, TweenInfo.new(0.15), {BackgroundColor3 = Color3.fromRGB(53, 53, 61)}):Play()
                    TweenService:Create(UIStroke, TweenInfo.new(0.15), {Color = Color3.fromRGB(67, 67, 77)}):Play()
                    TweenService:Create(ToggleInner, TweenInfo.new(0.15), {
                        BackgroundColor3 = Color3.fromRGB(80, 201, 206),
                        Position = UDim2.new(1, -15, 0.5, -7)
                    }):Play()
                else
                    TweenService:Create(ToggleOuter, TweenInfo.new(0.15), {BackgroundColor3 = Color3.fromRGB(35, 35, 40)}):Play()
                    TweenService:Create(UIStroke, TweenInfo.new(0.15), {Color = Color3.fromRGB(54, 54, 62)}):Play()
                    TweenService:Create(ToggleInner, TweenInfo.new(0.15), {
                        BackgroundColor3 = Color3.fromRGB(66, 66, 76),
                        Position = UDim2.new(0, 1, 0.5, -7)
                    }):Play()
                end
            end

            updateVisual()

            local ClickBtn = Instance.new("TextButton")
            ClickBtn.BackgroundTransparency = 1
            ClickBtn.Size = UDim2.new(1, 0, 1, 0)
            ClickBtn.Text = ""
            ClickBtn.Parent = ToggleFrame

            ClickBtn.MouseButton1Click:Connect(function()
                state = not state
                updateVisual()
                callback(state)
            end)
        end

        return TabFrame
    end

    return Tabs
end

return ElixirLib
